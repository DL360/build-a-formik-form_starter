var ErrorUtils = /** @class */ (function () {
    function ErrorUtils() {
    }
    ErrorUtils.isFieldInError = function (errors, fieldName) {
        return errors.filter(function (err) { return err.fieldName === fieldName; }).length > 0;
    };
    ErrorUtils.getFailedRules = function (errors) {
        return errors.reduce(function (acc, error) {
            acc[error.fieldName] = error.failedRules;
            return acc;
        }, {});
    };
    ErrorUtils.getFailedRulesInField = function (errors, fieldName) {
        var _a, _b;
        return (_b = (_a = ErrorUtils.getErrorsForField(errors, fieldName)) === null || _a === void 0 ? void 0 : _a.failedRules) !== null && _b !== void 0 ? _b : [];
    };
    ErrorUtils.getErrorsForField = function (errors, fieldName) {
        return errors.find(function (err) { return err.fieldName === fieldName; });
    };
    ErrorUtils.getErrorsInField = function (errors, fieldName) {
        var _a, _b;
        return (_b = (_a = ErrorUtils.getErrorsForField(errors, fieldName)) === null || _a === void 0 ? void 0 : _a.messages) !== null && _b !== void 0 ? _b : [];
    };
    ErrorUtils.getErrorMessages = function (errors, separator) {
        if (separator === void 0) { separator = '\n'; }
        return errors.map(function (err) { return err.messages.join(separator); }).join(separator);
    };
    return ErrorUtils;
}());
export { ErrorUtils };
